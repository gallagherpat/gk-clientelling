// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema



generator client {
  provider = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_URL") // uses connection pooling
  // directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  // shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  basket    UsersBasket[]
}

model Customer {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  items Items[]
}

model Items {
  itemID              String @id @unique
  price               Float
  receiptText         String
  registrationNumber  String
  shortDescription    String
  longDescription     String
  url                 String
  basket ItemsInBasket[]
  customer Customer          @relation(fields: [item], references: [id], onDelete: Cascade)
  item                Int @default(autoincrement())
}

model Basket {
  id Int @id @default(autoincrement())
  items ItemsInBasket[]
  user UsersBasket[]
  }

model ItemsInBasket {
  product   Items   @relation(fields: [productID], references: [itemID])
  productID String
  basket    Basket  @relation(fields: [basketID], references: [id])
  basketID  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([productID, basketID])
}

model UsersBasket {
  user  User @relation(fields: [userID], references: [id])
  userID Int
  basket Basket @relation(fields: [basketID], references: [id])
  basketID Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([userID, basketID])
}